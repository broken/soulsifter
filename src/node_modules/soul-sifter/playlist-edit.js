import { css, html, LitElement } from "@polymer/lit-element";

import "@polymer/paper-checkbox/paper-checkbox.js";
import "@polymer/paper-input/paper-input.js";

import "./abstract-action-page.js";
import "./genre-list.js";


class PlaylistEdit extends LitElement {
  render() {
    this.gmusicSync = !!this.playlist.gmusicId;
    return html`
      <ss-googleplaymusic id="gpm"></ss-googleplaymusic>
      <abstract-action-page @cancel="${this.exit}" @accept="${this.save}">
        <div class="fields">
          <paper-input floatingLabel label="Name" value="${this.playlist.name}"></paper-input>
          <paper-input floatingLabel label="Query" value="${this.playlist.query}"></paper-input>
          <br>
          <paper-checkbox checked="${this.fromSongTrail}">from Song Trail</paper-checkbox>
          <paper-checkbox checked="${this.gmusicSync}">sync with Google Music</paper-checkbox>
        </div>
        <div class="genres">
          <genre-list id="genreList" selection="${this.playlist.styles}" single-select></genre-list>
        </div>
      </abstract-action-page>
    `;
  }

  static get properties() {
    return {
      playlist: { type: Object },
      fromSongTrail: { type: Boolean },
      gmusicSync: { type: Boolean },
    }
  }

  constructor() {
    super();
    this.fromSongTrail = false;
    this.gmusicSync = false;
  }

  save(e) {
    if (this.playlist.id) {
      this.playlist.update();
    } else {
      this.playlist.save();
      if (this.fromSongTrail) {
        let event = new CustomEvent('save-song-trail', { detail: this.playlist });
        window.dispatchEvent(event);
      }
    }
    if (this.gmusicSync && !this.playlist.gmusicId) {
      // TODO this.$.gpm.createPlaylist(this.playlist);
    }
    let event = new CustomEvent('update-playlists', { });
    window.dispatchEvent(event);
    exit();
  }

  exit(e) {
    this.classList.remove('show');
  }

  static get styles() {
    return [
      css`
        :host {
          font-size: 16px;
          display: none;
          position: absolute;
          top: 0;
          right: 0;
          bottom: 0;
          left: 0;
        }
        :host(.show) {
          display: block;
        }
        .genres {
          height: 100%;
          overflow-y: scroll;
        }
      `,
    ];
  }
}

window.customElements.define('playlist-edit', PlaylistEdit);
